// https://jenkins.ininica.com/view/Common%20UI/job/spark-monorepo-examples/

@Library('pipeline-library')

Boolean isMainBranch = env.BRANCH_NAME == 'main'

Boolean isMaintenanceReleaseBranch = env.BRANCH_NAME.startsWith('maintenance/')

Boolean isFeatureBranch = env.BRANCH_NAME.startsWith('feature/') || env.BRANCH_NAME.startsWith('beta/') || isMaintenanceReleaseBranch

Boolean isReleaseBranch = isMainBranch

webappPipelineV2 {
    urlPrefix = 'common-ui-docs/genesys-webcomponents'
    agentLabel = 'dev_x86_shared'
    nodeVersion = '20.x multiarch'
    mailer = 'CoreUI@genesys.com'
    chatGroupId = 'adhoc-30ab1aa8-d42e-4590-b2a4-c9f7cef6d51c'
    manifest = customManifest('./web-apps/genesys-spark-examples/dist') {
        sh('./web-apps/genesys-spark-examples/scripts/generate-manifest.js')
        readJSON(file: './web-apps/genesys-spark-examples/manifest.json')
    }
    prepareStep = {
        sh('npm run devops.create.pipeline.examples')
        sh('npm ci')
    }
    ciTests = {
        sh('printenv')
    }
    buildStep = { assetPrefix ->
        if (isReleaseBranch) {
            String version = sh(
                script: 'node -e "console.log(require(\'./package.json\').version)"',
                returnStdout: true
            ).trim()
            currentBuild.description = version
        } else {
            currentBuild.description = env.BRANCH_NAME
        }

        env.ASSET_PREFIX = assetPrefix

        sh('npm run build')
    }
}
