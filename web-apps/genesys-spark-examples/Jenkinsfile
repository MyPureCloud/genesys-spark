@Library('pipeline-library')

Boolean isMainBranch = env.BRANCH_NAME == 'main'

Boolean isMaintenanceReleaseBranch = env.BRANCH_NAME.startsWith('maintenance/')

Boolean isReleaseBranch = isMainBranch || isMaintenanceReleaseBranch

webappPipelineV2 {
    urlPrefix = 'common-ui-docs/genesys-webcomponents'
    agentLabel = 'dev_x86_shared'
    nodeVersion = '16.18.0'
    mailer = 'CoreUI@genesys.com'
    chatGroupId = 'adhoc-30ab1aa8-d42e-4590-b2a4-c9f7cef6d51c'
    skipCommitsFrom = [] // This job is triggered after another job has built and promoted assets, published packages and committed a version bump so we can't skip commmits from jenkins.
    manifest = customManifest('./web-apps/genesys-spark-examples/dist') {
        sh('./web-apps/genesys-spark-examples/scripts/generate-manifest.js')
        readJSON(file: './web-apps/genesys-spark-examples/manifest.json')
    }
    prepareStep = {
        sh('npm run devops.create.pipeline.examples')
        sh('npm ci')
    }
    ciTests = {
        sh('printenv')
    }
    buildStep = { assetPrefix ->
        if (isReleaseBranch) {
            String version = sh(
                script: 'node -e "console.log(require(\'./package.json\').version)"',
                returnStdout: true
            ).trim()
            currentBuild.description = version
        } else {
            currentBuild.description = env.BRANCH_NAME
        }

        String cdnUrl = assetPrefix
        // This is a bit of a kludge, but the build pipeline is intended for apps, which
        // can use relative URLs to load assets. Because the components are running inside
        // apps, they have to load their assets from a full URL on the new UI hosting stack.
        if (assetPrefix.startsWith('/')) {
            cdnUrl = "https://app.mypurecloud.com${assetPrefix}genesys-webcomponents/"
        }

        env.CDN_URL = cdnUrl

        sh('npm run build')
    }
    onPromoteSuccess = {
        sh('printenv')

        currentBuild.description = """<a href="https://grandcentral.ininica.com/#/services/spark-components-webui/version/${env.SERVICE_VERSION}" target="_blank">${env.VERSION}@GrandCentral</a></h2>"""
    }
}
