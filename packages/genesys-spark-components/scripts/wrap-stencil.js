#! /usr/bin/env node

const Handlebars = require('handlebars');
const path = require('path');
const fs = require('fs');
const proc = require('child_process');

const COMPONENT_ASSETS_PATH = process.env.COMPONENT_ASSETS_PATH || '';

console.log(`Wrapping stencil loader.`);
if (COMPONENT_ASSETS_PATH.length > 0) {
  console.log(`  Embedded CDN URL will be: ${COMPONENT_ASSETS_PATH}`);
} else {
  console.log(`  No CDN URL specified.`);
}

const tscPath = require.resolve('.bin/tsc');
const templateFile = path.join(__dirname, './stencil-wrapper.ts');
const sourceOutputFolder = path.join(__dirname, '../build');
const sourceOutputFile = path.join(sourceOutputFolder, 'stencil-wrapper.ts');
const distDir = path.join(__dirname, '../dist');
const typesDir = path.join(distDir, 'types');
const typesFile = path.join(typesDir, 'index.d.ts');
const template = Handlebars.compile(fs.readFileSync(templateFile, 'utf8'));

const source = template({ component_assets_path: COMPONENT_ASSETS_PATH });

if (!fs.existsSync(sourceOutputFolder)) {
  fs.mkdirSync(sourceOutputFolder, { recursive: true });
}
fs.writeFileSync(sourceOutputFile, source);

proc.execSync(
  `${tscPath} --target es2017 --lib ES2021.Intl --moduleResolution node --allowSyntheticDefaultImports --declaration --declarationDir ${typesDir} --outDir ${distDir}  ${sourceOutputFile}`,
  { stdio: 'inherit' }
);

const autoGeneratedTypes = `
  export * from './components';
  export * from './stencil-wrapper';
`;
fs.writeFileSync(typesFile, autoGeneratedTypes);
