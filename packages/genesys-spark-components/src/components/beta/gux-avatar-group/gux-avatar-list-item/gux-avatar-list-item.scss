@use '~genesys-spark/dist/scss/focus.scss';

$gux-avatar-mask: "data:image/svg+xml,%3Csvg viewBox='0 0 26 26' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M22 13c0-2.6.7-5 1.8-7.2C21.5 2.3 17.5 0 13 0 5.8 0 0 5.8 0 13s5.8 13 13 13c4.5 0 8.5-2.3 10.8-5.8C22.7 18 22 15.6 22 13z' /%3E%3C/svg%3E";

@mixin mask {
  -webkit-mask-image: url($gux-avatar-mask);
  mask-image: url($gux-avatar-mask);
}

:host {
  width: 100%;
  text-align: start;
  border-radius: 50%;
  outline: none;

  button,
  a {
    display: inline-block;
    padding: 0;
    line-height: 0px;
    cursor: pointer;
    background: none;
    border: none;
    border-radius: 50%;
    outline: none;

    &:last-of-type {
      mask: none;
    }

    &:focus-visible {
      @include focus.gux-focus-ring-small;

      background: var(--gse-ui-avatar-content-default-border-color);
    }

    &.gux-avatar-default {
      width: 32px;
      height: 32px;
    }

    &.gux-avatar-plus-name {
      all: unset;
      box-sizing: border-box;
      width: 100%;
      min-height: var(--gse-ui-menu-option-height);
      padding: var(--gse-ui-menu-option-padding);
      font-family: var(--gse-ui-menu-option-label-default-text-fontFamily);
      font-size: var(--gse-ui-menu-option-label-default-text-fontSize);
      font-weight: var(--gse-ui-menu-option-label-default-text-fontWeight);
      line-height: var(--gse-ui-menu-option-label-default-text-lineHeight);
      color: var(--gse-ui-menu-option-label-foregroundColor);
      word-wrap: break-word;
      cursor: pointer;
      background-color: var(--gse-ui-menu-option-default-backgroundColor);
      border: none;
      outline: none;
      outline-offset: calc(var(--gse-ui-menu-option-focus-border-width) * -1);
      mask: none;

      .gux-avatar-flex {
        display: flex;
        gap: 8px;
        align-items: center;
      }

      &:focus-visible {
        border-radius: var(
          --gse-semantic-focusRing-cornerRadius,
          var(--gse-semantic-focusOutline-sm-borderRadius)
        );
        outline: var(--gse-ui-menu-option-focus-border-width)
          var(--gse-ui-menu-option-focus-border-style)
          var(--gse-ui-menu-option-focus-border-color);
      }

      &:hover {
        background: var(--gse-ui-menu-option-hover-backgroundColor);
      }

      &:active {
        font-family: var(--gse-ui-menu-option-label-active-text-fontFamily);
        font-size: var(--gse-ui-menu-option-label-active-text-fontSize);
        font-weight: var(--gse-ui-menu-option-label-active-text-fontWeight);
        line-height: var(--gse-ui-menu-option-label-active-text-lineHeight);
        background: var(--gse-ui-menu-option-selected-backgroundColor);
      }
    }
  }
}
