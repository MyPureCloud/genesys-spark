// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`gux-form-field-time-picker #render should render component as expected when an optional "error" slot is provided 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label This is an error message</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input gux-input-error"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error gux-show"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" aria-describedby="gux-form-field-error-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> <span slot="error" id="gux-form-field-error-i">This is an error message</span> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when an optional "error" slot is provided 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when an optional "help" slot is provided 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help gux-show"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" aria-describedby="gux-form-field-help-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> <span slot="help" id="gux-form-field-help-i">This is a help message</span> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when an optional "help" slot is provided 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when an optional "label-info" slot is provided 1`] = `
"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label 
      This is some tooltip text </legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" aria-describedby="gux-label-info-beta-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> <gux-label-info-beta slot="label-info" id="gux-label-info-beta-i" hydrated=""> <span slot="content">This is some tooltip text</span> </gux-label-info-beta> </gux-form-field-time-picker>"
`;

exports[`gux-form-field-time-picker #render should render component as expected when an optional "label-info" slot is provided 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when indicator-mark is "optional" 1`] = `"<gux-form-field-time-picker indicator-mark="optional" hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""><span class="gux-form-field-label-indicator-optional">(optional)</span></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when indicator-mark is "optional" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when indicator-mark is "required" 1`] = `"<gux-form-field-time-picker indicator-mark="required" hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when indicator-mark is "required" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "disabled" 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container gux-disabled"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" disabled="" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "disabled" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="15"" 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" interval="15" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="15"" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="30"" 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" interval="30" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="30"" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="60"" 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" interval="60" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "interval="60"" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "required" 1`] = `"<gux-form-field-time-picker hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label Required</legend><div class="gux-form-field-visual-label gux-required gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""><span class="gux-form-field-label-indicator-required" aria-hidden="true">*</span></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" required="" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when input attribute is "required" 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is above 1`] = `"<gux-form-field-time-picker label-position="above" hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-above"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-above" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is above 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is beside 1`] = `"<gux-form-field-time-picker label-position="beside" hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-beside"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-beside" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is beside 2`] = `null`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is screenreader 1`] = `"<gux-form-field-time-picker label-position="screenreader" hydrated=""><template shadowrootmode="open"><fieldset class="gux-form-field-fieldset-container gux-screenreader"><legend class="gux-form-field-screenreader-label">Label</legend><div class="gux-form-field-visual-label gux-screenreader" role="presentation"><slot name="label"></slot><gux-form-field-label-indicator hydrated=""></gux-form-field-label-indicator><slot name="label-info"></slot></div><div class="gux-input-and-error-container"><div class="gux-input"><div class="gux-time-picker-container"><slot></slot></div></div><div role="alert" class="gux-form-field-error"><gux-icon icon-name="fa/hexagon-exclamation-solid" size="small" hydrated=""></gux-icon><div class="gux-message"><slot name="error"></slot></div></div><div class="gux-form-field-help"><div class="gux-message"><slot name="help"></slot></div></div></div></fieldset></template> <gux-time-picker value="07:00" id="gux-form-field-input-i" hydrated=""></gux-time-picker> <label slot="label" for="gux-form-field-input-i">Label</label> </gux-form-field-time-picker>"`;

exports[`gux-form-field-time-picker #render should render component as expected when label-position is screenreader 2`] = `null`;
