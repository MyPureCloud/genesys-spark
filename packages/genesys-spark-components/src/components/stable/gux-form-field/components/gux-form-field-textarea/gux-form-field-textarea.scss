@use '../../gux-form-field.scss';
@use '../../functional-components/gux-form-field-container/gux-form-field-container.scss';
@use '../../functional-components/gux-form-field-error/gux-form-field-error.scss';
@use '../../functional-components/gux-form-field-label/gux-form-field-label.scss';
@use '../../functional-components/gux-form-field-help/gux-form-field-help.scss';

@mixin gux-textarea-sizing-properties {
  padding: var(--gse-ui-formControl-textarea-padding);
  margin: 0;
}

@include gux-form-field-container.Style;
@include gux-form-field-error.Style;
@include gux-form-field-label.Style;
@include gux-form-field-help.Style;

:host {
  display: block;
}

::slotted(label) {
  @include gux-form-field.gse-ui-formControl-label;
}

::slotted(textarea) {
  flex: 1 1 auto;
  align-self: auto;
  order: 0;
  font-family: inherit;
  font-family: var(--gse-ui-formControl-input-contentText-fontFamily);
  font-size: var(--gse-ui-formControl-input-contentText-fontSize);
  font-weight: var(--gse-ui-formControl-input-contentText-fontWeight);
  line-height: var(--gse-ui-formControl-input-contentText-lineHeight);
  color: var(--gse-ui-formControl-input-populatedColor);
  resize: vertical;
  background-color: var(--gse-ui-formControl-input-backgroundColor);
  background-image: none;
  border: none;
  border-radius: var(--gse-ui-formControl-input-borderRadius);
  outline: none;

  @include gux-textarea-sizing-properties;

  &::placeholder {
    color: var(--gse-ui-formControl-input-placeholderColor);
    opacity: 1;
  }

  &[disabled] {
    opacity: var(--gse-ui-formControl-input-disabled-opacity);
  }
}

.gux-input-and-error-container {
  flex-grow: 1;

  .gux-input {
    position: relative;
    display: flex;
    border: var(--gse-ui-formControl-input-default-border-width)
      var(--gse-ui-formControl-input-default-border-style)
      var(--gse-ui-formControl-input-default-border-color);
    border-radius: var(--gse-ui-formControl-input-borderRadius);
    outline: none;

    &:focus-within {
      border: var(--gse-ui-formControl-input-active-border-width)
        var(--gse-ui-formControl-input-active-border-style)
        var(--gse-ui-formControl-input-active-border-color);
      border-radius: var(--gse-ui-formControl-focusRing-borderRadius);
      outline: var(--gse-ui-formControl-input-focus-border-width)
        var(--gse-ui-formControl-input-focus-border-style)
        var(--gse-ui-formControl-input-focus-border-color);
      outline-offset: var(--gse-semantic-focusRing-offset);
    }

    &:hover:not(.gux-disabled) {
      border: var(--gse-ui-formControl-input-hover-border-width)
        var(--gse-ui-formControl-input-hover-border-style)
        var(--gse-ui-formControl-input-hover-border-color);
    }

    &.gux-input-error {
      border-color: var(--gse-ui-formControl-input-error-border-color);
    }

    &.gux-disabled {
      opacity: var(--gse-ui-formControl-input-disabled-opacity);
    }

    &.gux-resize-none {
      ::slotted(textarea) {
        resize: none;
      }
    }

    &.gux-resize-auto {
      // https://codepen.io/chriscoyier/pen/XWKEVLy

      /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
      display: grid;
      overflow: hidden;
      word-break: normal;

      // This is for Safari and is non standard https://www.w3.org/TR/css-text-3/#valdef-word-break-break-word
      word-break: break-word;
      overflow-wrap: anywhere;

      &::after {
        /* Place on top of each other */
        grid-row-start: 1;
        grid-row-end: 2;
        grid-column-start: 1;
        grid-column-end: 2;

        /* This is how textarea text behaves */
        white-space: pre-wrap;

        /* Hidden from view, clicks, and screen readers */
        visibility: hidden;

        /* Note the weird space! Needed to preventy jumpy behavior */
        content: attr(data-replicated-value) ' ';

        @include gux-textarea-sizing-properties;
      }

      ::slotted(textarea) {
        /* Place on top of each other */
        grid-row-start: 1;
        grid-row-end: 2;
        grid-column-start: 1;
        grid-column-end: 2;
        overflow-x: hidden;

        /* You could leave this, but after a user resizes, then it ruins the auto sizing */
        resize: none;
      }
    }
  }
}
