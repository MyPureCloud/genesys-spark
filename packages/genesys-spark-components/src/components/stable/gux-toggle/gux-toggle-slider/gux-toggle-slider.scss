@use 'sass:math';

$toggle-height: var(--gse-ui-toggle-track-height);
$toggle-width: var(--gse-ui-toggle-track-width);
$slider-diameter: calc(var(--gse-ui-toggle-handle-width));
$slider-transition: calc($toggle-width - $toggle-height);
$slider-transition-duration: 0.2s; // TODO: COMUI-2509 - we are hardcoding this animation duration until design comes back with a token

gux-toggle-slider {
  display: flex;
  align-items: center;
  padding: 2px;
  outline: none;

  .gux-toggle-slider {
    position: relative;
    display: inline-block;
    flex: 0 1 auto;
    align-self: auto;
    order: 0;
    width: $toggle-width;
    height: $toggle-height;
    cursor: pointer;
    border-radius: var(--gse-ui-toggle-track-borderRadius);

    &.gux-error {
      .gux-slider {
        background-color: var(--gse-ui-toggle-track-error-off-backgroundColor);

        .gux-switch {
          border: var(--gse-ui-toggle-handle-error-border-width)
            var(--gse-ui-toggle-handle-error-border-style)
            var(--gse-ui-toggle-handle-error-border-color);
        }
      }

      &.gux-checked {
        .gux-slider {
          background-color: var(--gse-ui-toggle-track-error-on-backgroundColor);
        }
      }
    }

    &.gux-disabled {
      pointer-events: none;
      cursor: default;
      background-color: var(--gse-ui-toggle-track-disabled-off-backgroundColor);
      opacity: var(--gse-ui-toggle-disabled-opacity);
    }

    &:focus-visible {
      border-radius: var(--gse-ui-toggle-focus-borderRadius);
      outline: var(--gse-ui-toggle-focus-border-width)
        var(--gse-ui-toggle-focus-border-style)
        var(--gse-ui-toggle-focus-border-color);
      outline-offset: var(--gse-ui-toggle-focus-offset);
    }

    .gux-slider {
      position: absolute;
      inset: 0;
      background-color: var(--gse-ui-toggle-track-enabled-off-backgroundColor);
      border-radius: calc($toggle-height / 2);
      transition: background-color $slider-transition-duration ease;

      &:hover {
        background-color: var(--gse-ui-toggle-track-hover-off-backgroundColor);
      }

      .gux-switch {
        position: absolute;
        bottom: calc(calc($toggle-height - $slider-diameter) / 2);
        left: calc(($toggle-height - $slider-diameter) / 2);
        width: calc($slider-diameter - 4px);
        height: calc(var(--gse-ui-toggle-handle-height) - 4px);
        color: var(--gse-ui-toggle-handle-foregroundColor);
        content: '';
        background-color: var(--gse-ui-toggle-handle-backgroundColor);
        border: var(--gse-ui-toggle-handle-enabled-border-width)
          var(--gse-ui-toggle-handle-enabled-border-style)
          var(--gse-ui-toggle-handle-enabled-border-color);
        border-radius: var(--gse-ui-toggle-handle-borderRadius);
        transition: $slider-transition-duration;

        gux-icon {
          position: absolute;
          inset: 0;
          width: calc(
            $slider-diameter - 6px
          ); // TODO : COMUI-2528 token needs to be created for 10px as 16px is too big for icon.

          height: calc(
            $slider-diameter - 6px
          ); // TODO : COMUI-2528 token needs to be created for 10px as 16px is too big for icon.

          margin: auto;
          color: var(--gse-ui-toggle-handle-backgroundColor);
          transition: color $slider-transition-duration linear;
        }
      }
    }

    &.gux-checked {
      .gux-slider {
        background-color: var(--gse-ui-toggle-track-enabled-on-backgroundColor);

        &.gux-disabled {
          background-color: var(
            --gse-ui-toggle-track-disabled-on-backgroundColor
          );

          .gux-switch {
            border: var(--gse-ui-toggle-handle-hover-disabled-border-width)
              var(--gse-ui-toggle-handle-hover-disabled-border-style)
              var(--gse-ui-toggle-handle-hover-disabled-border-color);
          }
        }

        &:hover {
          background-color: var(--gse-ui-toggle-track-hover-on-backgroundColor);

          .gux-switch {
            border: var(--gse-ui-toggle-handle-hover-border-width)
              var(--gse-ui-toggle-handle-hover-border-style)
              var(--gse-ui-toggle-handle-hover-border-color);
          }
        }

        .gux-switch {
          transform: translateX($slider-transition);

          gux-icon {
            color: var(--gse-ui-toggle-handle-foregroundColor);
            opacity: 1;
            transition: opacity math.div($slider-transition-duration, 2) linear;
            transition-delay: math.div($slider-transition-duration, 2);
          }
        }
      }
    }
  }
}
