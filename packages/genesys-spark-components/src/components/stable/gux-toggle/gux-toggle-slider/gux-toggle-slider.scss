@use '~genesys-spark/dist/beta/tokens/flare/ui.scss';
@use 'sass:math';

$toggle-height: ui.$gse-ui-toggle-track-height;
$toggle-width: ui.$gse-ui-toggle-track-width;
$slider-diameter: ui.$gse-ui-toggle-handle-width;
$slider-transition: calc(#{$toggle-width} - #{$toggle-height});
$slider-transition-duration: 0.2s; // TODO: COMUI-2509 - we are hardcoding this animation duration until design comes back with a token

gux-toggle-slider {
  display: flex;
  align-items: center;
  padding: 2px;
  outline: none;

  .gux-toggle-slider {
    position: relative;
    display: inline-block;
    flex: 0 1 auto;
    align-self: auto;
    order: 0;
    inline-size: $toggle-width;
    block-size: $toggle-height;
    cursor: pointer;
    border-radius: ui.$gse-ui-toggle-track-borderRadius;

    &.gux-error {
      .gux-slider {
        background-color: ui.$gse-ui-toggle-track-error-off-backgroundColor;

        .gux-switch {
          border: ui.$gse-ui-toggle-handle-error-border-width
            ui.$gse-ui-toggle-handle-error-border-style
            ui.$gse-ui-toggle-handle-error-border-color;
        }
      }

      &.gux-checked {
        .gux-slider {
          background-color: ui.$gse-ui-toggle-track-error-on-backgroundColor;
        }
      }
    }

    &.gux-disabled {
      pointer-events: none;
      cursor: default;
      background-color: ui.$gse-ui-toggle-track-disabled-off-backgroundColor;
      opacity: ui.$gse-ui-toggle-disabled-opacity;
    }

    &:focus-visible {
      outline: ui.$gse-ui-toggle-focus-border-width
        ui.$gse-ui-toggle-focus-border-style
        ui.$gse-ui-toggle-focus-border-color;
      outline-offset: ui.$gse-ui-toggle-focus-offset;
      border-radius: ui.$gse-ui-toggle-focus-borderRadius;
    }

    .gux-slider {
      position: absolute;
      inset: 0;
      background-color: ui.$gse-ui-toggle-track-enabled-off-backgroundColor;
      border-radius: calc(#{$toggle-height} / 2);
      transition: background-color #{$slider-transition-duration} ease;

      &:hover {
        background-color: ui.$gse-ui-toggle-track-hover-off-backgroundColor;
      }

      .gux-switch {
        position: absolute;
        inset-block-end: calc((#{$toggle-height} - #{$slider-diameter}) / 2);
        inset-inline-start: calc((#{$toggle-height} - #{$slider-diameter}) / 2);
        inline-size: calc(#{$slider-diameter} - 4px);
        block-size: calc(#{ui.$gse-ui-toggle-handle-height} - 4px);
        color: ui.$gse-ui-toggle-handle-foregroundColor;
        content: '';
        background-color: ui.$gse-ui-toggle-handle-backgroundColor;
        border: ui.$gse-ui-toggle-handle-enabled-border-width
          ui.$gse-ui-toggle-handle-enabled-border-style
          ui.$gse-ui-toggle-handle-enabled-border-color;
        border-radius: ui.$gse-ui-toggle-handle-borderRadius;
        transition: $slider-transition-duration;

        gux-icon {
          position: absolute;
          inset: 0;
          // TODO : COMUI-2528 token needs to be created for 10px as 16px is too big for icon.
          inline-size: calc(#{$slider-diameter} - 6px);
          block-size: calc(#{$slider-diameter} - 6px);
          margin: auto;
          color: ui.$gse-ui-toggle-handle-backgroundColor;
          transition: color #{$slider-transition-duration} linear;
        }
      }
    }

    &.gux-checked {
      .gux-slider {
        background-color: ui.$gse-ui-toggle-track-enabled-on-backgroundColor;

        &.gux-disabled {
          background-color: ui.$gse-ui-toggle-track-disabled-on-backgroundColor;

          .gux-switch {
            border: ui.$gse-ui-toggle-handle-disabled-border-width
              ui.$gse-ui-toggle-handle-disabled-border-style
              ui.$gse-ui-toggle-handle-disabled-border-color;
          }
        }

        &:hover {
          background-color: ui.$gse-ui-toggle-track-hover-on-backgroundColor;

          .gux-switch {
            border: ui.$gse-ui-toggle-handle-hover-border-width
              ui.$gse-ui-toggle-handle-hover-border-style
              ui.$gse-ui-toggle-handle-hover-border-color;
          }
        }

        .gux-switch {
          transform: translateX(#{$slider-transition});

          gux-icon {
            color: ui.$gse-ui-toggle-handle-foregroundColor;
            opacity: 1;
            transition: opacity math.div($slider-transition-duration, 2) linear;
            transition-delay: math.div($slider-transition-duration, 2);
          }
        }
      }
    }
  }
}
